/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthImport } from './routes/_auth'
import { Route as AppImport } from './routes/_app'
import { Route as AuthIndexImport } from './routes/_auth/index'
import { Route as AppHomeImport } from './routes/_app/_home'
import { Route as AppDashboardImport } from './routes/_app/_dashboard'
import { Route as AppHomeHomeImport } from './routes/_app/_home/home'
import { Route as AppDashboardDashboardEntityIndexImport } from './routes/_app/_dashboard/dashboard/$entity/index'
import { Route as AppDashboardDashboardEntityWorkspaceIndexImport } from './routes/_app/_dashboard/dashboard/$entity/workspace/index'
import { Route as AppDashboardDashboardEntityWorkspaceHashImport } from './routes/_app/_dashboard/dashboard/$entity/workspace/$hash'

// Create/Update Routes

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const AppRoute = AppImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const AuthIndexRoute = AuthIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthRoute,
} as any)

const AppHomeRoute = AppHomeImport.update({
  id: '/_home',
  getParentRoute: () => AppRoute,
} as any)

const AppDashboardRoute = AppDashboardImport.update({
  id: '/_dashboard',
  getParentRoute: () => AppRoute,
} as any)

const AppHomeHomeRoute = AppHomeHomeImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => AppHomeRoute,
} as any)

const AppDashboardDashboardEntityIndexRoute =
  AppDashboardDashboardEntityIndexImport.update({
    id: '/dashboard/$entity/',
    path: '/dashboard/$entity/',
    getParentRoute: () => AppDashboardRoute,
  } as any)

const AppDashboardDashboardEntityWorkspaceIndexRoute =
  AppDashboardDashboardEntityWorkspaceIndexImport.update({
    id: '/dashboard/$entity/workspace/',
    path: '/dashboard/$entity/workspace/',
    getParentRoute: () => AppDashboardRoute,
  } as any)

const AppDashboardDashboardEntityWorkspaceHashRoute =
  AppDashboardDashboardEntityWorkspaceHashImport.update({
    id: '/dashboard/$entity/workspace/$hash',
    path: '/dashboard/$entity/workspace/$hash',
    getParentRoute: () => AppDashboardRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_app/_dashboard': {
      id: '/_app/_dashboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppDashboardImport
      parentRoute: typeof AppImport
    }
    '/_app/_home': {
      id: '/_app/_home'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppHomeImport
      parentRoute: typeof AppImport
    }
    '/_auth/': {
      id: '/_auth/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthIndexImport
      parentRoute: typeof AuthImport
    }
    '/_app/_home/home': {
      id: '/_app/_home/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof AppHomeHomeImport
      parentRoute: typeof AppHomeImport
    }
    '/_app/_dashboard/dashboard/$entity/': {
      id: '/_app/_dashboard/dashboard/$entity/'
      path: '/dashboard/$entity'
      fullPath: '/dashboard/$entity'
      preLoaderRoute: typeof AppDashboardDashboardEntityIndexImport
      parentRoute: typeof AppDashboardImport
    }
    '/_app/_dashboard/dashboard/$entity/workspace/$hash': {
      id: '/_app/_dashboard/dashboard/$entity/workspace/$hash'
      path: '/dashboard/$entity/workspace/$hash'
      fullPath: '/dashboard/$entity/workspace/$hash'
      preLoaderRoute: typeof AppDashboardDashboardEntityWorkspaceHashImport
      parentRoute: typeof AppDashboardImport
    }
    '/_app/_dashboard/dashboard/$entity/workspace/': {
      id: '/_app/_dashboard/dashboard/$entity/workspace/'
      path: '/dashboard/$entity/workspace'
      fullPath: '/dashboard/$entity/workspace'
      preLoaderRoute: typeof AppDashboardDashboardEntityWorkspaceIndexImport
      parentRoute: typeof AppDashboardImport
    }
  }
}

// Create and export the route tree

interface AppDashboardRouteChildren {
  AppDashboardDashboardEntityIndexRoute: typeof AppDashboardDashboardEntityIndexRoute
  AppDashboardDashboardEntityWorkspaceHashRoute: typeof AppDashboardDashboardEntityWorkspaceHashRoute
  AppDashboardDashboardEntityWorkspaceIndexRoute: typeof AppDashboardDashboardEntityWorkspaceIndexRoute
}

const AppDashboardRouteChildren: AppDashboardRouteChildren = {
  AppDashboardDashboardEntityIndexRoute: AppDashboardDashboardEntityIndexRoute,
  AppDashboardDashboardEntityWorkspaceHashRoute:
    AppDashboardDashboardEntityWorkspaceHashRoute,
  AppDashboardDashboardEntityWorkspaceIndexRoute:
    AppDashboardDashboardEntityWorkspaceIndexRoute,
}

const AppDashboardRouteWithChildren = AppDashboardRoute._addFileChildren(
  AppDashboardRouteChildren,
)

interface AppHomeRouteChildren {
  AppHomeHomeRoute: typeof AppHomeHomeRoute
}

const AppHomeRouteChildren: AppHomeRouteChildren = {
  AppHomeHomeRoute: AppHomeHomeRoute,
}

const AppHomeRouteWithChildren =
  AppHomeRoute._addFileChildren(AppHomeRouteChildren)

interface AppRouteChildren {
  AppDashboardRoute: typeof AppDashboardRouteWithChildren
  AppHomeRoute: typeof AppHomeRouteWithChildren
}

const AppRouteChildren: AppRouteChildren = {
  AppDashboardRoute: AppDashboardRouteWithChildren,
  AppHomeRoute: AppHomeRouteWithChildren,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

interface AuthRouteChildren {
  AuthIndexRoute: typeof AuthIndexRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthIndexRoute: AuthIndexRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AppHomeRouteWithChildren
  '/': typeof AuthIndexRoute
  '/home': typeof AppHomeHomeRoute
  '/dashboard/$entity': typeof AppDashboardDashboardEntityIndexRoute
  '/dashboard/$entity/workspace/$hash': typeof AppDashboardDashboardEntityWorkspaceHashRoute
  '/dashboard/$entity/workspace': typeof AppDashboardDashboardEntityWorkspaceIndexRoute
}

export interface FileRoutesByTo {
  '': typeof AppHomeRouteWithChildren
  '/': typeof AuthIndexRoute
  '/home': typeof AppHomeHomeRoute
  '/dashboard/$entity': typeof AppDashboardDashboardEntityIndexRoute
  '/dashboard/$entity/workspace/$hash': typeof AppDashboardDashboardEntityWorkspaceHashRoute
  '/dashboard/$entity/workspace': typeof AppDashboardDashboardEntityWorkspaceIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_app': typeof AppRouteWithChildren
  '/_auth': typeof AuthRouteWithChildren
  '/_app/_dashboard': typeof AppDashboardRouteWithChildren
  '/_app/_home': typeof AppHomeRouteWithChildren
  '/_auth/': typeof AuthIndexRoute
  '/_app/_home/home': typeof AppHomeHomeRoute
  '/_app/_dashboard/dashboard/$entity/': typeof AppDashboardDashboardEntityIndexRoute
  '/_app/_dashboard/dashboard/$entity/workspace/$hash': typeof AppDashboardDashboardEntityWorkspaceHashRoute
  '/_app/_dashboard/dashboard/$entity/workspace/': typeof AppDashboardDashboardEntityWorkspaceIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/'
    | '/home'
    | '/dashboard/$entity'
    | '/dashboard/$entity/workspace/$hash'
    | '/dashboard/$entity/workspace'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/'
    | '/home'
    | '/dashboard/$entity'
    | '/dashboard/$entity/workspace/$hash'
    | '/dashboard/$entity/workspace'
  id:
    | '__root__'
    | '/_app'
    | '/_auth'
    | '/_app/_dashboard'
    | '/_app/_home'
    | '/_auth/'
    | '/_app/_home/home'
    | '/_app/_dashboard/dashboard/$entity/'
    | '/_app/_dashboard/dashboard/$entity/workspace/$hash'
    | '/_app/_dashboard/dashboard/$entity/workspace/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AppRoute: typeof AppRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AppRoute: AppRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_app",
        "/_auth"
      ]
    },
    "/_app": {
      "filePath": "_app.tsx",
      "children": [
        "/_app/_dashboard",
        "/_app/_home"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/"
      ]
    },
    "/_app/_dashboard": {
      "filePath": "_app/_dashboard.tsx",
      "parent": "/_app",
      "children": [
        "/_app/_dashboard/dashboard/$entity/",
        "/_app/_dashboard/dashboard/$entity/workspace/$hash",
        "/_app/_dashboard/dashboard/$entity/workspace/"
      ]
    },
    "/_app/_home": {
      "filePath": "_app/_home.tsx",
      "parent": "/_app",
      "children": [
        "/_app/_home/home"
      ]
    },
    "/_auth/": {
      "filePath": "_auth/index.tsx",
      "parent": "/_auth"
    },
    "/_app/_home/home": {
      "filePath": "_app/_home/home.tsx",
      "parent": "/_app/_home"
    },
    "/_app/_dashboard/dashboard/$entity/": {
      "filePath": "_app/_dashboard/dashboard/$entity/index.tsx",
      "parent": "/_app/_dashboard"
    },
    "/_app/_dashboard/dashboard/$entity/workspace/$hash": {
      "filePath": "_app/_dashboard/dashboard/$entity/workspace/$hash.tsx",
      "parent": "/_app/_dashboard"
    },
    "/_app/_dashboard/dashboard/$entity/workspace/": {
      "filePath": "_app/_dashboard/dashboard/$entity/workspace/index.tsx",
      "parent": "/_app/_dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
